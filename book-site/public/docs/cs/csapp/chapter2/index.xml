<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>第二章 on Wenbo&#39;s Study Notes</title>
    <link>http://localhost:1313/notes/docs/cs/csapp/chapter2/</link>
    <description>Recent content in 第二章 on Wenbo&#39;s Study Notes</description>
    <generator>Hugo</generator>
    <language>ch</language>
    <atom:link href="http://localhost:1313/notes/docs/cs/csapp/chapter2/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title></title>
      <link>http://localhost:1313/notes/docs/cs/csapp/chapter2/out/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/docs/cs/csapp/chapter2/out/</guid>
      <description>&lt;h1 id=&#34;证明&#34;&gt;&#xD;&#xA;  证明：&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%af%81%e6%98%8e&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1引入问题&#34;&gt;&#xD;&#xA;  1.引入问题&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1%e5%bc%95%e5%85%a5%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;在本章中，CSAPP定义了用长度为&lt;span&gt;&#xD;&#xA;  \(w\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;的&lt;strong&gt;位向量&lt;/strong&gt;编码无符号数与有符号数的方式，以及它们的各种算术运算。位向量可以写成两种形式 &lt;span&gt;&#xD;&#xA;  \(\vec{x}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;  表示整个向量，或 &lt;span&gt;&#xD;&#xA;  \([x_{w-1},...,x_0]\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;形式，将其每一位表示出来。&lt;/p&gt;&#xA;&lt;blockquote class=&#34;book-hint danger&#34;&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;br&gt;&#xA;在考虑本章中位向量时，要注意的是，虽然它长相与二进制数相同，但在本章中的含义并不是二进制数，而是上面所说的位向量，也并未在这种向量上定义加法，例如&lt;/p&gt;&#xA;&lt;link rel=&#34;stylesheet&#34; href=&#34;http://localhost:1313/notes/katex/katex.min.css&#34; /&gt;&#xD;&#xA;&lt;script defer src=&#34;http://localhost:1313/notes/katex/katex.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script defer src=&#34;http://localhost:1313/notes/katex/auto-render.min.js&#34; onload=&#34;renderMathInElement(document.body);&#34;&gt;&lt;/script&gt;&lt;span&gt;&#xD;&#xA;  \(10+01=11\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; ； 仅仅是使用0和1构成的串进行编码，每一位有根据其编码方式所定义的权重。&#xD;&#xA;&lt;/blockquote&gt;&#xD;&#xA;&lt;p&gt;现在考虑这样一个问题：设有 &lt;span&gt;&#xD;&#xA;  \(w\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; 位的两个位向量 &lt;span&gt;&#xD;&#xA;  \(\vec{x}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; 和 &lt;span&gt;&#xD;&#xA;  \(\vec{y}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; , 考虑如下等式是否成立：&lt;/p&gt;&#xA;&lt;span&gt;&#xD;&#xA;  \[&#xD;&#xA;U2B_w(B2U_w(\vec{x}) +_{u}^{w} B2U_w(\vec{y})) = T2B_w(B2T_w(\vec{x}) +_{t}^{w} B2T_w(\vec{y}))&#xD;&#xA;\]&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;&#xA;&lt;p&gt;换句话说，将这两个向量转换成无符号数做加法，同时也将这两个数转换为有符号数做加法，再将两个加法的结果转换回向量形式，这两个向量是否相等？&lt;strong&gt;或者说，由于这两个加法是封闭的，加完之后的数一定也在各自相应的集合中，编码这两个数的位向量是否相同？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-证明这个等式的意义是什么&#34;&gt;&#xD;&#xA;  2. 证明这个等式的意义是什么？&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e8%af%81%e6%98%8e%e8%bf%99%e4%b8%aa%e7%ad%89%e5%bc%8f%e7%9a%84%e6%84%8f%e4%b9%89%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;如果这个等式成立，那么就在机器指令层面就不需要区分无符号数和补码编码的数，只需要一条add指令即可完成这两种编码的数据的加法操作。如果对于减法、乘法、触发或是其他运算的该公式成立，那么ALU实现这些指令的时候，都不需要区分这两种数据编码方式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3三个引理&#34;&gt;&#xD;&#xA;  3.三个引理&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3%e4%b8%89%e4%b8%aa%e5%bc%95%e7%90%86&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;想解决这个问题，需要先引入一些前置引理，来描述什么时候一个 &lt;span&gt;&#xD;&#xA;  \(w\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;​​ 位无符号数 &lt;span&gt;&#xD;&#xA;  \(u = B2U_w(\vec{u})\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; 和一个补码编码的有符号数 &lt;span&gt;&#xD;&#xA;  \(t = B2U_w(\vec{t})\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; 的向量相等。&lt;/p&gt;&#xA;&lt;p&gt;  &lt;strong&gt;引理3.1&lt;/strong&gt;：如果 &lt;span&gt;&#xD;&#xA;  \(u - t = 0\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; ，则 &lt;span&gt;&#xD;&#xA;  \(\vec{u}=\vec{t}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;.&lt;/p&gt;&#xA;&lt;p&gt;  &lt;strong&gt;引理3.2&lt;/strong&gt;： 如果 &lt;span&gt;&#xD;&#xA;  \(u - t = 2^w\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; ，则 &lt;span&gt;&#xD;&#xA;  \(\vec{u}=\vec{t}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;.&lt;/p&gt;</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/notes/docs/cs/csapp/chapter2/t/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/notes/docs/cs/csapp/chapter2/t/</guid>
      <description>&lt;h1 id=&#34;证明&#34;&gt;&#xD;&#xA;  证明：&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#%e8%af%81%e6%98%8e&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h1&gt;&#xD;&#xA;&lt;hr&gt;&#xA;&lt;h2 id=&#34;1引入问题&#34;&gt;&#xD;&#xA;  1.引入问题&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#1%e5%bc%95%e5%85%a5%e9%97%ae%e9%a2%98&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;在本章中，CSAPP定义了用长度为&lt;span&gt;&#xD;&#xA;  \(w\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;的&lt;strong&gt;位向量&lt;/strong&gt;编码无符号数与有符号数的方式，以及它们的各种算术运算。位向量可以写成两种形式 &lt;span&gt;&#xD;&#xA;  \(\vec{x}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;  表示整个向量，或 &lt;span&gt;&#xD;&#xA;  \([x_{w-1},...,x_0]\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;形式，将其每一位表示出来。&lt;/p&gt;&#xA;&lt;blockquote class=&#34;book-hint danger&#34;&gt;&#xD;&#xA;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;&lt;br&gt;&#xA;在考虑本章中位向量时，要注意的是，虽然它长相与二进制数相同，但在本章中的含义并不是二进制数，而是上面所说的位向量，也并未在这种向量上定义加法，例如&lt;/p&gt;&#xA;&lt;link rel=&#34;stylesheet&#34; href=&#34;http://localhost:1313/notes/katex/katex.min.css&#34; /&gt;&#xD;&#xA;&lt;script defer src=&#34;http://localhost:1313/notes/katex/katex.min.js&#34;&gt;&lt;/script&gt;&#xD;&#xA;&lt;script defer src=&#34;http://localhost:1313/notes/katex/auto-render.min.js&#34; onload=&#34;renderMathInElement(document.body);&#34;&gt;&lt;/script&gt;&lt;span&gt;&#xD;&#xA;  \(10+01=11\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; ； 仅仅是使用0和1构成的串进行编码，每一位有根据其编码方式所定义的权重。&#xD;&#xA;&lt;/blockquote&gt;&#xD;&#xA;&lt;p&gt;现在考虑这样一个问题：设有 &lt;span&gt;&#xD;&#xA;  \(w\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; 位的两个位向量 &lt;span&gt;&#xD;&#xA;  \(\vec{x}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; 和 &lt;span&gt;&#xD;&#xA;  \(\vec{y}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; , 考虑如下等式是否成立：&lt;/p&gt;&#xA;&lt;span&gt;&#xD;&#xA;  \[&#xD;&#xA;U2B_w(B2U_w(\vec{x}) +_{u}^{w} B2U_w(\vec{y})) = T2B_w(B2T_w(\vec{x}) +_{t}^{w} B2T_w(\vec{y}))&#xD;&#xA;\]&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;&#xA;&lt;p&gt;换句话说，将这两个向量转换成无符号数做加法，同时也将这两个数转换为有符号数做加法，再将两个加法的结果转换回向量形式，这两个向量是否相等？&lt;strong&gt;或者说，由于这两个加法是封闭的，加完之后的数一定也在各自相应的集合中，编码这两个数的位向量是否相同？&lt;/strong&gt;&lt;/p&gt;&#xA;&lt;h2 id=&#34;2-证明这个等式的意义是什么&#34;&gt;&#xD;&#xA;  2. 证明这个等式的意义是什么？&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#2-%e8%af%81%e6%98%8e%e8%bf%99%e4%b8%aa%e7%ad%89%e5%bc%8f%e7%9a%84%e6%84%8f%e4%b9%89%e6%98%af%e4%bb%80%e4%b9%88&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;如果这个等式成立，这意味着可以用只需要用二进制数的加法就能同时计算补码和无符号数，那么就在机器指令层面就不需要区分无符号数和补码编码的数，只需要一条add指令即可完成这两种编码的数据的加法操作。如果对于减法、乘法、触发或是其他运算的该公式成立，那么ALU实现这些指令的时候，都不需要区分这两种数据编码方式。&lt;/p&gt;&#xA;&lt;h2 id=&#34;3两个引理&#34;&gt;&#xD;&#xA;  3.两个引理&#xD;&#xA;  &lt;a class=&#34;anchor&#34; href=&#34;#3%e4%b8%a4%e4%b8%aa%e5%bc%95%e7%90%86&#34;&gt;#&lt;/a&gt;&#xD;&#xA;&lt;/h2&gt;&#xD;&#xA;&lt;hr&gt;&#xA;&lt;p&gt;想解决这个问题，需要先引入一些前置引理，来描述什么时候一个 &lt;span&gt;&#xD;&#xA;  \(w\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;​​ 位无符号数 &lt;span&gt;&#xD;&#xA;  \(u = B2U_w(\vec{u})\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; 和一个补码编码的有符号数 &lt;span&gt;&#xD;&#xA;  \(t = B2U_w(\vec{t})\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; 的向量相等。&lt;/p&gt;&#xA;&lt;p&gt;  &lt;strong&gt;引理3.1&lt;/strong&gt;：如果 &lt;span&gt;&#xD;&#xA;  \(u - t = 0\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; ，则 &lt;span&gt;&#xD;&#xA;  \(\vec{u}=\vec{t}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;.&lt;/p&gt;&#xA;&lt;p&gt;  &lt;strong&gt;引理3.2&lt;/strong&gt;： 如果 &lt;span&gt;&#xD;&#xA;  \(u - t = 2^w\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA; ，则 &lt;span&gt;&#xD;&#xA;  \(\vec{u}=\vec{t}\)&#xD;&#xA;&lt;/span&gt;&#xD;&#xA;.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
